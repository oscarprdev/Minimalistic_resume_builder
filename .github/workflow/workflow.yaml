name: Minimalistic resume builder Frontend CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
        types: [opened, synchronize]
    paths:
        - 'frontend/**.js'
        - 'frontend/**.ts'
        - 'frontend/**.json'

concurrency:
    group: ${{ github.head_ref }}
    cancel-in-progress: true

jobs:
    avoid_redundancy:
        runs-on: ubuntu-22.04
        permissions:
            actions: write
        timeout-minutes: 2
        steps:
            - name: Cancel previous runs
              uses: styfle/cancel-workflow-action@0.9.1
              with:
                  all_but_latest: true
                  access_token: ${{ github.token }}
    install-cache:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Commit
              uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node }}
              uses: actions/setup-node@v4
              with:
                  node-version: '18.17.0'
            - name: Cache npm dependencies
              uses: actions/cache@v4
              id: cache-dependencies
              with:
                  path: frontend/node_modules
                  key: ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}
                  restore-keys: |
                      ${{ runner.os }}-npm-
            - name: Cache Playwright binary
              id: cache-playwright-binary
              uses: actions/cache@v4
              with:
                  path: frontend/node_modules
                  key: playwright-binary-${{ hashFiles('**/package.json') }}
                  restore-keys: |
                      playwright-binary-
            - name: Install Dependencies
              if: steps.cache-dependencies.outputs.cache-hit != 'true'
              run: |
                  cd frontend && npm install
    lint-format:
        runs-on: ubuntu-latest
        needs: install-cache
        steps:
            - name: Checkout Commit
              uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node }}
              uses: actions/setup-node@v4
              with:
                  node-version: '18.17.0'
            - name: Restore npm dependencies
              uses: actions/cache@v4
              id: cache-dependencies
              with:
                  path: frontend/node_modules
                  key: ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}
                  restore-keys: |
                      ${{ runner.os }}-npm-
            - name: Run lint
              run: |
                  cd frontend && npm lint
            - name: Run prettier
              run: |
                  cd frontend && npm format
    type-check:
        runs-on: ubuntu-latest
        needs: install-cache
        steps:
            - name: Checkout Commit
              uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node }}
              uses: actions/setup-node@v4
              with:
                  node-version: '18.17.0'
            - name: Restore npm dependencies
              uses: actions/cache@v4
              id: cache-dependencies
              with:
                  path: frontend/node_modules
                  key: ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}
                  restore-keys: |
                      ${{ runner.os }}-npm-
            - name: Check types
              run: |
                  cd frontend && npm type-check
    build:
        runs-on: ubuntu-latest
        needs: [lint-format, type-check]
        steps:
            - name: Checkout Commit
              uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node }}
              uses: actions/setup-node@v4
              with:
                  node-version: '18.17.0'
            - name: Restore npm dependencies
              uses: actions/cache@v4
              id: cache-dependencies
              with:
                  path: frontend/node_modules
                  key: ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}
                  restore-keys: |
                      ${{ runner.os }}-npm-
            - name: Run build
              run: |
                  cd frontend && npm run build
    e2e-tests-chrome:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Checkout Commit
              uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node }}
              uses: actions/setup-node@v4
              with:
                  node-version: '18.17.0'
            - name: Restore npm dependencies
              uses: actions/cache@v4
              id: cache-dependencies
              with:
                  path: frontend/node_modules
                  key: ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}
                  restore-keys: |
                      ${{ runner.os }}-npm-
            - name: Restore Playwright binary
              id: cache-playwright-binary
              uses: actions/cache@v4
              with:
                  path: frontend/node_modules
                  key: playwright-binary-${{ hashFiles('**/package.json') }}
                  restore-keys: |
                      playwright-binary-
            - name: Install playwright
              run: cd frontend && npx playwright install --with-deps
            - name: Run Tests
              shell: bash
              run: cd frontend && npm run test:e2e
